apiVersion: v1
data:
  .dockerconfigjson:
kind: Secret
metadata:
  creationTimestamp: null
  name: credencials-kube0
  namespace: grup4
type: kubernetes.io/dockerconfigjson

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: laravel-cache-pvc
  namespace: grup4
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: laravel-storage-pvc
  namespace: grup4
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
  namespace: grup4
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redis-pvc
  namespace: grup4
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: grup4
  labels:
    app: vue
    type: frontend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: vue
        type: frontend
    spec:
      containers:
        - name: frontend
          image:
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 80
              name: frontend-port
      imagePullSecrets:
        - name: credencials-kube0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: grup4
  labels:
    app: laravel
    type: backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: laravel
        type: backend
    spec:
      containers:
        - name: backend
          image:
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 80
              name: frontend-port
      imagePullSecrets:
        - name: credencials-kube0

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: grup4
  labels:
    app: redis
    type: backend
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
      type: backend
  template:
    metadata:
      labels:
        app: redis
        type: backend
    spec:
      containers:
        - name: redis
          image: redis:6.0.9
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 6379
              name: redis-port
          volumeMounts:
            - name: redis-pvc
              mountPath: /data

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql
  namespace: grup4
  labels:
    app: mysql
    type: backend
spec:
  serviceName: mysql
  replicas: 1
  selector:
    matchLabels:
      app: mysql
      type: backend
  template:
    metadata:
      labels:
        app: mysql
        type: backend
    spec:
      containers:
        - name: mysql
          image: mysql:8.0
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 3306
              name: mysql-port
          volumeMounts:
            - name: mysql-pvc
              mountPath: /var/lib/mysql
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: ""
            - name: MYSQL_DATABASE
              value: ""
            - name: MYSQL_USER
              value: ""
            - name: MYSQL_PASSWORD
              value: ""

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  namespace: grup4
  labels:
    app: apache
    type: proxy
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: apache
        type: proxy
    spec:
      containers:
        - name: proxy
          image:
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 80
              name: proxy-port
      imagePullSecrets:
        - name: credencials-kube0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: imageengine
  namespace: grup4
  labels:
    app: imageengine
    type: backend
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: imageengine
        type: backend
    spec:
      containers:
        - name: imageengine
          image:
          resources:
            requests:
              memory: "150Mi"
              cpu: "100m"
            limits:
              memory: "250Mi"
              cpu: "200m"
          ports:
            - containerPort: 5000
              name: imageengine-port
      imagePullSecrets:
        - name: credencials-kube0

---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: grup4
spec:
  type: ClusterIP
  selector:
    app: vue
    type: frontend
  ports:
    - port: 80
      targetPort: 80
  clusterIP: 10.96.4.10

---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: grup4
spec:
  type: ClusterIP
  selector:
    app: laravel
    type: backend
  ports:
    - port: 80
      targetPort: 80
  clusterIP: 10.96.4.20

---
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: grup4
spec:
  type: ClusterIP
  selector:
    app: mysql
    type: backend
  ports:
    - port: 3306
      targetPort: 3306
  clusterIP: 10.96.4.30

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: grup4
spec:
  type: ClusterIP
  selector:
    app: redis
    type: backend
  ports:
    - port: 6379
      targetPort: 6379
  clusterIP: 10.96.4.40

---
apiVersion: v1
kind: Service
metadata:
  name: imageengine
  namespace: grup4
spec:
  type: ClusterIP
  selector:
    app: imageengine
    type: backend
  ports:
    - port: 5000
      targetPort: 5000
  clusterIP: 10.96.4.50

---
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: grup4
spec:
  type: NodePort
  selector:
    app: apache
    type: proxy
  ports:
    - port: 80
      targetPort: 80
      nodePort: 32004
